ggplot(metascore_games, aes(x = release_date2, y = metascore)) +
geom_density(stat = 'density')
ggplot(metascore_games, aes(x = release_date2)) +
geom_density(aes(y = metascore), stat = 'density')
ggplot(metascore_games, aes(x = month)) +
geom_density(aes(y = metascore), stat = 'density')
ggplot(metascore_games, aes(x = month)) +
geom_density(aes(y = metascore), stat = 'density')
ggplot(metascore_games) +
geom_density(aes(y = metascore), stat = 'density')
ggplot(metascore_games, aes(x = month)) +
geom_density( stat = 'density')
install.packages('ggridges')
library(ggridges)
ggplot(metascore_games, aes(x = month)) +
geom_density_ridges( stat = 'density')
ggplot(metascore_games, aes(x = month)) +
geom_density_ridges(aes(height = metascore), stat = 'density')
ggplot(metascore_games, aes(x = month, y = metascore)) +
geom_density_ridges()
ggplot(metascore_games, aes(x = month, y = metascore)) +
geom_density_ridges(stat = 'density')
ggplot(metascore_games, aes(x = metascore, y = month)) +
geom_density_ridges(stat = 'density')
ggplot(metascore_games, aes(x = metascore, y = month)) +
geom_density_ridges()
ggplot(metascore_games, aes(x = metascore, y = month)) +
geom_density_ridges(aes(fill = month)) + them
ggplot(metascore_games, aes(x = metascore, y = month)) +
geom_density_ridges(aes(fill = month))
video_games %>%
filter(!is.na(average_playtime)) %>%
ggplot(
aes( x = average_playtime, y = year(release_date2))
) + geom_density_ridges()
video_games %>%
filter(!is.na(average_playtime)) %>%
ggplot(
aes( y = average_playtime, x = year(release_date2))
) + geom_density_ridges()
video_games %>%
filter(!is.na(average_playtime)) %>%
ggplot(
aes( x = average_playtime, y = as.factor(year(release_date2)))
) + geom_density_ridges()
video_games %>%
filter(!is.na(average_playtime)) %>%
ggplot(
aes( x = average_playtime, y = as.factor(year(release_date2)))
) + geom_density_ridges(rel_min_height = 0.005)
video_games %>%
filter(!is.na(average_playtime)) %>%
ggplot(
aes( x = average_playtime, y = as.factor(year(release_date2)))
) + geom_density_ridges(rel_min_height = 0.005) +
scale_x_continuous(limits = c(0, 2000))
video_games %>%
filter(!is.na(average_playtime)) %>%
ggplot(
aes( x = average_playtime, y = as.factor(year(release_date2)))
) + geom_density_ridges(rel_min_height = 0.005)
video_games %>%
filter(!is.na(price)) %>%
ggplot(
aes(x = price, y = as.factor(year(release_date2)))
) +
geom_density_ridges()
video_games %>%
filter(!is.na(price)) %>%
ggplot(
aes(x = price, y = as.factor(year(release_date2)))
) +
geom_density_ridges(rel_min_height = 0.005)
max(video_games$price)
video_games %>% filter(!is.na(price)) %>% select(price) %>% max(.)
video_games %>%
filter(!is.na(price)) %>%
ggplot(
aes(x = price, y = as.factor(year(release_date2)))
) +
geom_jitter()
video_games %>%
filter(!is.na(price)) %>%
filter(
price < 1.5*(
group_by(year) %>% summarize(sd(price))
)
)
video_games %>%
filter(!is.na(price)) %>%
filter(
price < 1.5*(
groupby(year) %>% summarize(sd(price))
)
)
video_games %>%
filter(!is.na(price)) %>%
filter(
price < 1.5*(
group_by(year(release_date2)) %>% summarize(sd(price))
)
)
video_games %>%
filter(!is.na(price)) %>%
filter(
price < 1.5*(
group_by(as.factor(year(release_date2))) %>% summarize(sd(price))
)
)
video_games %>%
filter(!is.na(price)) %>%
filter(
price < 1.5*sd(price)
)
video_games %>%
filter(!is.na(price)) %>%
filter(
price < 1.5*sd(price)
) %>%
ggplot(aes(x = year(release_date2), y = price)) +
geom_jitter(color = year(release_date2)) +
geom_point(mean(price), size = 3, color = 'black') +
theme(axis.text.y = element_blank(),
axis.title.y = element_blank(),
axis.ticks.y = element_blank())
video_games %>%
filter(!is.na(price)) %>%
filter(
price < 1.5*sd(price)
) %>%
ggplot(aes(x = year(release_date2), y = price)) +
geom_jitter(color = year(release_date2)) +
geom_point(mean(price), size = 3, color = 'black') +
theme(axis.text.y = element_blank(),
axis.title.y = element_blank(),
axis.ticks.y = element_blank())
video_games %>%
filter(!is.na(price)) %>%
filter(
price < 1.5*sd(price)
)
video_games %>%
filter(!is.na(price)) %>%
filter(
price < 1.5*sd(price)
) %>%
mutate(year = year(release_date2)) %>%
ggplot(aes(x = year, y = price)) +
geom_jitter(color = year) +
geom_point(mean(price), size = 3, color = 'black') +
theme(axis.text.y = element_blank(),
axis.title.y = element_blank(),
axis.ticks.y = element_blank())
video_games %>%
filter(!is.na(price)) %>%
filter(
price < 1.5*sd(price)
) %>%
mutate(year = year(release_date2)) %>%
ggplot(aes(x = year, y = price)) +
geom_jitter(color = year) +
geom_point(aes(y = mean(price)), size = 3, color = 'black') +
theme(axis.text.y = element_blank(),
axis.title.y = element_blank(),
axis.ticks.y = element_blank())
video_games %>%
filter(!is.na(price)) %>%
filter(
price < 1.5*sd(price)
) %>%
mutate(year = year(release_date2)) -> price_data
ggplot(price_data, aes(x = year, y = price)) +
geom_jitter(aes(color = year))
ggplot(price_data, aes(x = year, y = price)) +
geom_density_ridges()
ggplot(price_data, aes(y = year, x = price)) +
geom_density_ridges()
ggplot(price_data, aes(y = as.factor(year), x = price)) +
geom_density_ridges()
ggplot(price_data, aes(y = year, x = price)) +
geom_density_ridges()
ggplot(price_data, aes(y = year, x = price)) +
geom_density_ridges()
video_games %>%
filter(!is.na(price)) %>%
filter(
price < 1.5*sd(price)
) %>%
mutate(year = as.factor(year(release_date2))) -> price_data
ggplot(price_data, aes(y = year, x = price)) +
geom_density_ridges()
ggplot(price_data, aes(y = year, x = price)) +
geom_density_ridges(aes(color = year)) +
theme(axis.text.y = element_blank(),
axis.ticks.y = element_blank(),
axis.title.y = element_blank())
ggplot(price_data, aes(y = year, x = price)) +
geom_density_ridges(aes(fill = year)) +
theme(axis.text.y = element_blank(),
axis.ticks.y = element_blank(),
axis.title.y = element_blank())
install.packages('xkcd')
ggplot(price_data, aes(y = year, x = price)) +
geom_density_ridges(aes(fill = year)) +
theme(axis.text.y = element_blank(),
axis.ticks.y = element_blank(),
axis.title.y = element_blank()) +
xkcd::xkcdaxis(year, price)
ggplot(price_data, aes(y = year, x = price)) +
geom_density_ridges(aes(fill = year)) +
theme(axis.text.y = element_blank(),
axis.ticks.y = element_blank(),
axis.title.y = element_blank()) +
xkcd::xkcdaxis(price_data$year, price_data$price)
xrange = range(price_data$year)
yrange = range(price_data$price)
video_games %>%
filter(!is.na(price)) %>%
filter(
price < 1.5*sd(price)
) %>%
mutate(year = (year(release_date2))) -> price_data
xrange = range(price_data$year)
yrange = range(price_data$price)
ggplot(price_data, aes(y = as.factor(year), x = price)) +
geom_density_ridges(aes(fill = year)) +
theme(axis.text.y = element_blank(),
axis.ticks.y = element_blank(),
axis.title.y = element_blank()) +
xkcdaxis(xrange, yrange)
library(xkcd)
ggplot(price_data, aes(y = as.factor(year), x = price)) +
geom_density_ridges(aes(fill = year)) +
theme(axis.text.y = element_blank(),
axis.ticks.y = element_blank(),
axis.title.y = element_blank()) +
xkcdaxis(xrange, yrange)
install.packages('xkcd', dependencies = TRUE)
install.packages("xkcd", dependencies = TRUE)
library(xkcd)
ggplot(price_data, aes(y = as.factor(year), x = price)) +
geom_density_ridges(aes(fill = year)) +
theme(axis.text.y = element_blank(),
axis.ticks.y = element_blank(),
axis.title.y = element_blank()) +
xkcdaxis(xrange, yrange)
library(ggridges)
ggplot(price_data, aes(y = as.factor(year), x = price)) +
geom_density_ridges(aes(fill = year)) +
theme(axis.text.y = element_blank(),
axis.ticks.y = element_blank(),
axis.title.y = element_blank()) +
xkcdaxis(xrange, yrange)
ggplot(price_data, aes(y = as.factor(year), x = price)) +
geom_jitter(aes(fill = year)) +
theme(axis.text.y = element_blank(),
axis.ticks.y = element_blank(),
axis.title.y = element_blank()) +
xkcdaxis(xrange, yrange)
download.file("http://simonsoftware.se/other/xkcd.ttf",
+ dest="xkcd.ttf", mode="wb")
download.file("http://simonsoftware.se/other/xkcd.ttf",
dest="xkcd.ttf", mode="wb")
system("mkdir ~/.fonts")
system("cp xkcd.ttf ~/.fonts")
font_import(pattern = "[X/x]kcd", prompt=FALSE)
fonts()
fonttable()
if(.Platform$OS.type != "unix") {
## Register fonts for Windows bitmap output
loadfonts(device="win")
} else {
loadfonts()
}
ggplot(price_data, aes(y = as.factor(year), x = price)) +
geom_jitter(aes(fill = year)) +
theme(axis.text.y = element_blank(),
axis.ticks.y = element_blank(),
axis.title.y = element_blank()) +
xkcdaxis(xrange, yrange)
video_games %>%
filter(!is.na(price)) %>%
filter(
price < 1.5*sd(price)
) %>%
mutate(year = as.factor(year(release_date2))) -> price_data
library(tidyverse)
ggplot(price_data, aes(y = as.factor(year), x = price)) +
geom_density_ridges(aes(fill = year)) +
theme(axis.text.y = element_blank(),
axis.ticks.y = element_blank(),
axis.title.y = element_blank())
video_games %>%
filter(!is.na(price)) %>%
filter(
price < 1.5*sd(price)
) %>%
mutate(year = as.factor(year(release_date2))) -> price_data
ggplot(price_data, aes(y = as.factor(year), x = price)) +
geom_density_ridges(aes(fill = year)) +
theme(axis.text.y = element_blank(),
axis.ticks.y = element_blank(),
axis.title.y = element_blank())
library(lubridate)
video_games %>%
filter(!is.na(price)) %>%
filter(
price < 1.5*sd(price)
) %>%
mutate(year = as.factor(year(release_date2))) -> price_data
ggplot(price_data, aes(y = as.factor(year), x = price)) +
geom_density_ridges(aes(fill = year)) +
theme(axis.text.y = element_blank(),
axis.ticks.y = element_blank(),
axis.title.y = element_blank())
ggplot(price_data, aes(y = as.factor(year), x = price)) +
geom_density_ridges(aes(fill = year)) +
theme(axis.text.y = element_blank(),
axis.ticks.y = element_blank(),
axis.title.y = element_blank()) +
theme_classic()
ggplot(price_data, aes(y = as.factor(year), x = price)) +
geom_density_ridges(aes(fill = year)) +
theme(axis.text.y = element_blank(),
axis.ticks.y = element_blank(),
axis.title.y = element_blank()) +
theme_get()
ggplot(price_data, aes(y = as.factor(year), x = price)) +
geom_density_ridges(aes(fill = year)) +
theme(axis.text.y = element_blank(),
axis.ticks.y = element_blank(),
axis.title.y = element_blank()) +
theme_xkcd()
ggplot(price_data, aes(y = as.factor(year), x = price)) +
geom_density_ridges(aes(fill = year)) +
theme(axis.text.y = element_blank(),
axis.ticks.y = element_blank(),
axis.title.y = element_blank()) +
theme_minimal()
ggplot(price_data, aes(y = as.factor(year), x = price)) +
geom_density_ridges(aes(fill = year)) +
theme(axis.text.y = element_blank(),
axis.ticks.y = element_blank(),
axis.title.y = element_blank()) +
theme_ridges()
ggplot(price_data, aes(y = as.factor(year), x = price)) +
geom_density_ridges(aes(fill = year)) +
theme(axis.text.y = element_blank(),
axis.ticks.y = element_blank(),
axis.title.y = element_blank()) +
theme_dark()
ggplot(price_data, aes(y = as.factor(year), x = price)) +
geom_density_ridges(aes(fill = year)) +
theme(axis.text.y = element_blank(),
axis.ticks.y = element_blank(),
axis.title.y = element_blank()) +
theme_test()
ggplot(price_data, aes(y = as.factor(year), x = price)) +
geom_density_ridges(aes(fill = year)) +
theme_test(axis.text.y = element_blank(),
axis.ticks.y = element_blank(),
axis.title.y = element_blank())
axis.text.y = element_blank(),
axis.ticks.y = element_blank(),
axis.title.y = element_blank()
ggplot(price_data, aes(y = as.factor(year), x = price)) +
geom_density_ridges(aes(fill = year)) +
theme(axis.text.y = element_blank(),
axis.ticks.y = element_blank(),
axis.title.y = element_blank()) +
theme_test()
ggplot(price_data, aes(y = as.factor(year), x = price)) +
geom_density_ridges(aes(fill = year)) +
theme(axis.text.y = element_blank(),
axis.ticks.y = element_blank(),
axis.title.y = element_blank()) +
theme_classi()
ggplot(price_data, aes(y = as.factor(year), x = price)) +
geom_density_ridges(aes(fill = year)) +
theme(axis.text.y = element_blank(),
axis.ticks.y = element_blank(),
axis.title.y = element_blank()) +
theme_classic()
ggplot(price_data, aes(y = as.factor(year), x = price)) +
geom_density_ridges(aes(fill = year)) +
theme(axis.text.y = element_blank(),
axis.ticks.y = element_blank(),
axis.title.y = element_blank())
ggplot(price_data, aes(y = as.factor(year), x = price)) +
geom_density_ridges(aes(fill = year)) +
theme(legend.box = element_blank())
ggplot(price_data, aes(y = as.factor(year), x = price)) +
geom_density_ridges(aes(fill = year)) +
theme(fill = element_blank())
ggplot(price_data, aes(y = as.factor(year), x = price)) +
geom_density_ridges(aes(fill = year)) +
theme(legend.text = element_blank())
ggplot(price_data, aes(y = as.factor(year), x = price)) +
geom_density_ridges(aes(fill = year)) +
theme(legend.text = element_blank(),
legend.title = element_blank())
ggplot(price_data, aes(y = as.factor(year), x = price)) +
geom_density_ridges(aes(fill = year)) +
theme(legend.position = 'none')
ggsave('price_year.jpeg')
library(tidyverse)
library(lubridate)
video_games %>%
filter(!is.na(price)) %>%
filter(
price < 1.5*sd(price)
) %>%
mutate(year = as.factor(year(release_date2))) -> price_data
video_games = readr::read_csv("https://raw.githubusercontent.com/rfordatascience/tidytuesday/master/data/2019/2019-07-30/video_games.csv")
video_games %>%
filter(!is.na(price)) %>%
filter(
price < 1.5*sd(price)
) %>%
mutate(year = as.factor(year(release_date2))) -> price_data
video_games$release_date2 = mdy(video_games$release_date)
video_games = video_games[-which(is.na(video_games$release_date2)), ]
video_games %>%
filter(!is.na(price)) %>%
filter(
price < 1.5*sd(price)
) %>%
mutate(year = as.factor(year(release_date2))) -> price_data
library(ggridges)
ggplot(price_data, aes(y = as.factor(year), x = price)) +
geom_density_ridges(aes(fill = year)) +
theme(legend.position = 'none') +
labs(title = 'Price of games over the years', xlab = 'Year', ylab = 'Price')
ggplot(price_data, aes(y = as.factor(year), x = price)) +
geom_density_ridges(aes(fill = year)) +
theme(legend.position = 'none') +
labs(title = 'Price of games over the years', x = 'Year', y = 'Price')
ggplot(price_data, aes(y = as.factor(year), x = price)) +
geom_density_ridges(aes(fill = year)) +
theme(legend.position = 'none') +
labs(title = 'Price of games over the years', y = 'Year', x = 'Price')
ggsave('price_year.jpeg')
address = function(){
add = readClipboard()
add = gsub('\\\\', '/', add)
return(add)
}
setwd(address())
video_games = readr::read_csv("https://raw.githubusercontent.com/rfordatascience/tidytuesday/master/data/2019/2019-07-30/video_games.csv")
View(video_games)
#converting release date column type to date type
library(lubridate)
library(tidyverse)
video_games$release_date2 = mdy(video_games$release_date)
video_games = video_games[-which(is.na(video_games$release_date2)), ]
glimpse(video_games)
address = function(){
add = readClipboard()
add = gsub('\\\\', '/', add)
return(add)
}
setwd(address())
video_games = readr::read_csv("https://raw.githubusercontent.com/rfordatascience/tidytuesday/master/data/2019/2019-07-30/video_games.csv")
View(video_games)
video_games %>%
filter(!is.na(price)) %>%
filter(
price < 1.5*sd(price)
) %>%
mutate(year = as.factor(year(release_date2))) -> price_data
library(ggridges)
ggplot(price_data, aes(y = as.factor(year), x = price)) +
geom_density_ridges(aes(fill = year)) +
theme(legend.position = 'none') +
labs(title = 'Price of games over the years', y = 'Year', x = 'Price')
ggsave('./plots/price_year.jpeg')
library(lubridate)
library(tidyverse)
video_games %>%
filter(!is.na(price)) %>%
filter(
price < 1.5*sd(price)
) %>%
mutate(year = as.factor(year(release_date2))) -> price_data
video_games$release_date2 = mdy(video_games$release_date)
video_games = video_games[-which(is.na(video_games$release_date2)), ]
video_games %>%
filter(!is.na(price)) %>%
filter(
price < 1.5*sd(price)
) %>%
mutate(year = as.factor(year(release_date2))) -> price_data
library(ggridges)
video_games$release_date2 = mdy(video_games$release_date)
ggplot(price_data, aes(y = as.factor(year), x = price)) +
geom_density_ridges(aes(fill = year)) +
theme(legend.position = 'none') +
labs(title = 'Price of games over the years', y = 'Year', x = 'Price')
ggsave('./plots/price_year.jpeg')
ggplot(price_data, aes(y = as.factor(year), x = price)) +
geom_density_ridges(aes(fill = year), stat= 'density', trim = TRUE) +
theme(legend.position = 'none') +
labs(title = 'Price of games over the years', y = 'Year', x = 'Price')
ggplot(price_data, aes(y = as.factor(year), x = price, group = year)) +
geom_density_ridges(aes(fill = year), stat= 'density', trim = TRUE) +
theme(legend.position = 'none') +
labs(title = 'Price of games over the years', y = 'Year', x = 'Price')
ggplot(price_data, aes(y = as.factor(year), x = price, group = year, height = ..density..)) +
geom_density_ridges(aes(fill = year), stat= 'density', trim = TRUE) +
theme(legend.position = 'none') +
labs(title = 'Price of games over the years', y = 'Year', x = 'Price')
ggsave('./plots/price_year.jpeg')
