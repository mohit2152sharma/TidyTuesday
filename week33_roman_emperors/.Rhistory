zoomvec = 0.5 + 0.5 * 1/(1 + exp(seq(-5, 10, length.out = 180)))
zoomvecfull = c(zoomvec, rev(zoomvec))
for(i in 1:360) {
render_camera(theta = thetavec[i],phi = phivecfull[i],zoom = zoomvecfull[i])
#uncomment the next line to save each frame to the working directory
render_snapshot(paste0("frame", i, ".png"))
}
install.packages('magick')
image_df = list()
for(i in 1:360){
image_df[[i]] = image_scale(image_read(paste("C:/Users/kswp234/Documents/frame", i, ".png", sep = ""), "400x400"))
}
library(magick)
for(i in 1:360){
image_df[[i]] = image_scale(image_read(paste("C:/Users/kswp234/Documents/frame", i, ".png", sep = ""), "400x400"))
}
image_df = as.data.frame(image_df)
image_animate(image_df, fps = 60, dispose = 'previous')
image_animate(image_df[[i]], fps = 60, dispose = 'previous')
image_animate(image_df[[i]], fps = 100, dispose = 'previous')
image_info(image_df[[i]])
image_df = c()
for(i in 1:360){
image_df[[i]] = image_scale(image_read(paste("C:/Users/kswp234/Documents/frame", i, ".png", sep = ""), "400x400"))
}
image_df = data.frame()
for(i in 1:360){
image_df[[i]] = image_scale(image_read(paste("C:/Users/kswp234/Documents/frame", i, ".png", sep = ""), "400x400"))
}
image_df = tibble()
for(i in 1:360){
image_df[[i]] = image_scale(image_read(paste("C:/Users/kswp234/Documents/frame", i, ".png", sep = ""), "400x400"))
}
image_df = tibble()
for(i in 1:360){
image_df[i] = image_scale(image_read(paste("C:/Users/kswp234/Documents/frame", i, ".png", sep = ""), "400x400"))
}
img = image_graph(400, 400, res = 100)
img = image_graph(400, 400, res = 100)
for(i in 1:360) {
render_image = render_camera(theta = thetavec[i],phi = phivecfull[i],zoom = zoomvecfull[i])
#uncomment the next line to save each frame to the working directory
#render_snapshot(paste0("frame", i, ".png"))
print(render_image)
}
plot_gg(gg, multicore = TRUE, height = 3, width = 5)
phivec = 20 + 70 * 1/(1 + exp(seq(-5, 10, length.out = 180)))
phivecfull = c(phivec, rev(phivec))
thetavec = 270 + 90 * sin(seq(0,359,length.out = 360) * pi/180)
zoomvec = 0.5 + 0.5 * 1/(1 + exp(seq(-5, 10, length.out = 180)))
zoomvecfull = c(zoomvec, rev(zoomvec))
img = image_graph(400, 400, res = 100)
for(i in 1:360) {
render_image = render_camera(theta = thetavec[i],phi = phivecfull[i],zoom = zoomvecfull[i])
#uncomment the next line to save each frame to the working directory
#render_snapshot(paste0("frame", i, ".png"))
print(render_image)
}
plot_gg(gg, multicore = TRUE, height = 3, width = 5)
phivec = 20 + 70 * 1/(1 + exp(seq(-5, 10, length.out = 180)))
phivecfull = c(phivec, rev(phivec))
thetavec = 270 + 90 * sin(seq(0,359,length.out = 360) * pi/180)
zoomvec = 0.5 + 0.5 * 1/(1 + exp(seq(-5, 10, length.out = 180)))
zoomvecfull = c(zoomvec, rev(zoomvec))
img = image_graph(400, 400, res = 100)
for(i in 1:360) {
render_camera(theta = thetavec[i],phi = phivecfull[i],zoom = zoomvecfull[i])
#uncomment the next line to save each frame to the working directory
#render_snapshot(paste0("frame", i, ".png"))
}
dev.off()
animation = image_animate(img, fps = 100)
animation
image_df = list()
for(i in 1:360){
image_df[[i]] = image_scale(image_read(paste("C:/Users/kswp234/Documents/frame", i, ".png", sep = ""), "400x400"))
}
image_df = rbind_list(image_df)
image_df[[i]]
image_df[[359]]
image_df2 = data.frame('format' = character(),
'width' = integer(),
'height' = integer(),
'colorspace' = character(),
'matte' = logical(),
'filesize' = integer(),
'density' = character())
image_df3 = bind_rows(image_df2, image_df)
class(image_df)
class(image_df[[i]])
image_list = list()
for(i in 1:360){
image_list[[i]] = image_scale(image_read(paste("C:/Users/kswp234/Documents/frame", i, ".png", sep = ""), "400x400"))
}
image_window = image_graph(600, 600, res = 72)
for(i in 1:360){
print(image_list[[i]])
}
image_window = image_graph(600, 600, res = 72)
image_window = image_graph(600, 600, res = 72)
for(i in 1:360){
print(image_list[[i]])
}
dev.off()
animation = image_animate(image_window, fps = 50)
animation
print(animation)
image_list[[2]]
image_window = image_graph(600, 600, res = 96)
for(i in 1:360){
print(image_list[[i]])
}
dev.off()
animation = image_animate(image_window, fps = 50)
print(animation)
for(i in 1:360){
image_list[[i]] = image_scale(image_read(paste("C:/Users/kswp234/Documents/frame", i, ".png", sep = ""), "400x400"))
image_df2 = rbind(image_df, image_list[[i]])
}
for(i in 1:360){
image_list[[i]] = image_scale(image_read(paste("C:/Users/kswp234/Documents/frame", i, ".png", sep = ""), "400x400"))
image_df2 = rbind(image_df, as.tibble(image_list[[i]]))
}
image_window = image_graph(600, 600, res = 96)
for(i in 1:360){
print(image_list[[i]])
}
dev.off()
animation = image_animate(image_window, fps = 50)
animation
out = for(i in 1:360){
print(image_list[[i]])
}
image_window = image_graph(600, 600, res = 96)
out = for(i in 1:360){
print(image_list[[i]])
}
dev.off()
animation = image_animate(image_window, fps = 50)
animation
image_list = c()
for(i in 1:360){
image_list[i] = image_scale(image_read(paste("C:/Users/kswp234/Documents/frame", i, ".png", sep = ""), "400x400"))
}
for(i in 1:360){
image_list[i] = (image_read(paste("C:/Users/kswp234/Documents/frame", i, ".png", sep = "")))
}
install.packages('animation')
library(animation)
ani.options(interval = 0.2, nmax = 10)
for( i in 1:ani.options('nmax')){
print(image_list[[i]])
ani.pause()
}
for( i in 1:ani.options('nmax')){
print(image_list[[i]])
ani.pause()
}
image_list = list()
image_list[[i]] = (image_read(paste("C:/Users/kswp234/Documents/frame", i, ".png", sep = "")))
for(i in 1:360){
image_list[[i]] = (image_read(paste("C:/Users/kswp234/Documents/frame", i, ".png", sep = "")))
}
ani.options(interval = 0.2, nmax = 10)
for( i in 1:ani.options('nmax')){
print(image_list[[i]])
ani.pause()
}
saveGIF( {
ani.options(interval = 0.05, nmax = 360)
for( i in 1:ani.options('nmax')){
print(image_list[[i]])
ani.pause()
}
}, movie.name = 'plot.gif')
plot_3d(gg, multicore = TRUE, height = 3, width = 5)
plot_3d(gg)
plot_3d(gg, zscale = 50)
plot_3d(gg, zscale = 50, heightmap = 50)
install.packages('mapmate')
library(mapmapte)
library(mapmate)
devtools::install_github("leonawicz/mapmate")
library(mapmate)
p <- "frame%d.png"
out <- "frames.gif"
# 10 fps gif
ffmpeg(pattern = p, output = out, rate = 10)
plot_gg(gg, multicore = TRUE, height = 3, width = 5)
for(i in 1:360) {
render_camera(theta = thetavec[i],phi = phivecfull[i],zoom = zoomvecfull[i])
#uncomment the next line to save each frame to the working directory
render_snapshot()
}
for(i in 359:360) {
render_camera(theta = thetavec[i],phi = phivecfull[i],zoom = zoomvecfull[i])
#uncomment the next line to save each frame to the working directory
render_snapshot()
}
plot_gg(gg, multicore = TRUE, height = 3, width = 5)
phivec = 20 + 70 * 1/(1 + exp(seq(-5, 10, length.out = 180)))
phivecfull = c(phivec, rev(phivec))
thetavec = 270 + 90 * sin(seq(0,359,length.out = 360) * pi/180)
zoomvec = 0.5 + 0.5 * 1/(1 + exp(seq(-5, 10, length.out = 180)))
zoomvecfull = c(zoomvec, rev(zoomvec))
for(i in 359:360) {
render_camera(theta = thetavec[i],phi = phivecfull[i],zoom = zoomvecfull[i])
#uncomment the next line to save each frame to the working directory
render_snapshot()
}
png(image_list[[i]])
png("frame1.png")
image = png()
for(i in 1:360){
print(image_list[[i]])
}
dev.off()
animation = image_animate(image, 10, dispose = 'previous')
rbind(image_list[[1]], image_list[[2]])
p = "frame%d.png"
out = "frames.gif"
ffmpeg(pattern = p, output = out, rate = 10)
library(tidyverse)
library(rayshader)
library(ISLR)
data()
attach(Titanic)
attach(Titanic)
load(Titanic)
require(Titanic)
View(Titanic)
library(rayshader)
View(diamonds)
?diamonds
ggplot(diamonds, aes(x = x, y = y, fill = z)) +
geom_bar()
ggplot(diamonds, aes(x = x, y = y, fill = z)) +
geom_line()
plot_gg(gg)
gg = ggplot(diamonds, aes(x = x, y = y, fill = z)) +
geom_line()
plot_gg(gg)
gg = ggplot(diamonds, aes(x = color, y = cut, fill = price)) +
geom_bar()
plot_gg(gg)
?nlevel
ggdiamonds = ggplot(diamonds) +
stat_density_2d(aes(x=x, y=depth, fill = stat(nlevel)),
geom = "polygon", n = 100, bins = 10,contour = TRUE) +
facet_wrap(clarity~.) +
scale_fill_viridis_c(option = "A")
plot_gg(ggdiamonds)
plot_gg(ggdiamonds)
ggdiamonds = ggplot(diamonds) +
stat_density_2d(aes(x=x, y=depth, fill = stat(nlevel)),
geom = "polygon", n = 100, bins = 10,contour = TRUE) +
scale_fill_viridis_c(option = "D")
ggdiamonds
print(ggdiamonds)
plot_gg(ggdiamonds)
ggdiamonds = ggplot(diamonds) +
stat_density_2d(aes(x=x, y=price, fill = stat(nlevel)),
geom = "polygon", n = 100, bins = 10,contour = TRUE) +
scale_fill_viridis_c(option = "D")
print(ggdiamonds)
?diamonds
plot_gg(ggdiamonds)
ggdiamonds = ggplot(diamonds) +
stat_density_2d(aes(x=carat, y=price, fill = stat(nlevel)),
geom = "polygon", n = 100, bins = 10,contour = TRUE) +
scale_fill_viridis_c(option = "D")
plot_gg(ggdiamonds)
plot_gg(ggdiamonds, width = 7, height = 7, phi = 10, theta = 30, multicore = TRUE)
plot_gg(ggdiamonds, width = 7, height = 7, phi = 30, theta = 30, multicore = TRUE)
plot_gg(ggdiamonds, width = 7, height = 7, phi = 30, theta = 30, multicore = TRUE, zoom = 0.7)
render_snapshot('diamonds.png')
plot_gg(ggdiamonds, width = 7, height = 7, phi = 30, theta = 30, multicore = TRUE, zoom = 1.7)
render_snapshot('diamonds.png')
plot_gg(ggdiamonds, width = 7, height = 7, phi = 30, theta = 30, multicore = TRUE, zoom = 0.3)
render_snapshot('diamonds.png')
plot_gg(ggdiamonds, width = 7, height = 7, phi = 30, theta = 30, multicore = TRUE, zoom = 0.5)
plot_gg(ggdiamonds, width = 7, height = 7, phi = 30, theta = 30, multicore = TRUE, zoom = 0.5)
ggdiamonds = ggplot(diamonds) +
stat_density_2d(aes(x=x, y=depth, fill = stat(nlevel)),
geom = "polygon", n = 100, bins = 10,contour = TRUE) +
scale_fill_viridis_c(option = "D")
plot_gg(ggdiamonds, width = 7, height = 7, phi = 30, theta = 30, multicore = TRUE, zoom = 0.5)
render_snapshot('diamonds.png')
install.packages('rvest')
ggdiamonds = ggplot(diamonds) +
stat_density_2d(aes(x=x, y=depth, fill = stat(nlevel)),
geom = "polygon", n = 100, bins = 10,contour = TRUE) +
scale_fill_viridis_c(option = "D")
plot_gg(ggdiamonds, width = 7, height = 7, phi = 30, theta = 30, multicore = TRUE, zoom = 0.5)
render_snapshot('diamonds.png')
library(rvest)
website_link = "https://www.amazon.in/dp/B07HBC65BV/ref=cm_sw_r_wa_apa_i_Kt8qDbR619NFK"
tech_info = read_html(website_link) %>% html_text
tech_info
tech_info = read_html(website_link) %>% html_text %>% html_attr(".label")
tech_info = read_html(website_link) %>% html_text %>% html_attr(.label)
tech_info = read_html(website_link) %>% html_nodes(".label") %>% html_text()
tech_info
tech_info = read_html(website_link) %>% html_nodes(".techD") %>% html_text()
html_text
tech_info
tech_info = read_html(website_link) %>% html_nodes(".prodDetails") %>% html_text()
tech_info = read_html(website_link) %>% html_nodes("#prodDetails") %>% html_text()
tech_info
tech_info = read_html(website_link) %>% html_nodes("td") %>% html_text()
tech_info
tech_info[1:10]
tech_info = read_html(website_link) %>% html_nodes(".label", ".value") %>% html_text()
tech_info = read_html(website_link) %>% html_nodes(".label") %>% html_text()
tech_info = read_html(website_link) %>% html_nodes(".secHeader , .value , .label") %>% html_text()
head(tech_info)
tech_info[1:30]
tech_info[50:76]
tech_info[50:76]
tail(tech_info)
tech_info[2]
class(tech_info[2]
)
class(tech_info[[2]])
laptop_details = data.frame('tech_detail' = character(), 'value' = character())
i += 2
i = 1
j = 1
laptop_details = data.frame('tech_detail' = character(), 'value' = character())
while(tech_info[i] != "Additional Information"){
laptop_details$tech_detail[j] = tech_info[i]
laptop_details$value[j] = tech_info[i+1]
i = i +2
j = j + 1
}
while(tech_info[i] != "Additional Information"){
laptop_details[j, 1] = tech_info[i]
laptop_details[j, 2]] = tech_info[i+1]
i = i +2
j = j + 1
}
while(tech_info[i] != "Additional Information"){
laptop_details[j, 1] = tech_info[i]
laptop_details[j, 2] = tech_info[i+1]
i = i +2
j = j + 1
}
View(laptop_details)
which(tech_info== "Additional Information")
tech_info == "Additional Information"
tech_info
tech_info = stringr::str_trim(tech_info)
tech_info
while(tech_info[i] != "Additional Information"){
laptop_details[j, 1] = tech_info[i]
laptop_details[j, 2] = tech_info[i+1]
i = i +2
j = j + 1
}
View(laptop_details)
which(tech_info == "Additional Information")
while(tech_info != "Additional Information"){
laptop_details[j, 1] = tech_info[i]
laptop_details[j, 2] = tech_info[i+1]
i = i +2
j = j + 1
}
View(laptop_details)
tech_details = []
while(tech_info[i] != "Additional Information"){
tech_details[[i]] = tech_info[j]
j = j + 2
i = i + 1
}
tech_details = list()
value = list()
while(tech_info[i] != "Additional Information"){
tech_details[[i]] = tech_info[j]
j = j + 2
i = i + 1
}
tech_info[66]
tech_info[66] != "Additional Information"
tech_info[66] == "Additional Information"
while(tech_info[i] != "Additional Information"){
tech_details[[i]] = tech_info[j]
j = j + 2
i = i + 1
}
limit = which(tech_info == "Additional Information")
for(i in 1:limit){
tech_details[[i]] = tech_info[j]
j = j+ 2
}
for(i in 1:limit){
tech_details[[i]] = tech_info[[j]]
j = j+ 2
}
tech_info[1]
tech_info[3]
j = 2
for(i in 1:limit){
tech_details[[i]] = tech_info[j]
j = j+ 2
}
return(add)
address = function(){
add = readClipboard()
add = gsub("\\\\", "/", add)
return(add)
}
directory_path = address()
setwd(directory_path)
emperors <- readr::read_csv("https://raw.githubusercontent.com/rfordatascience/tidytuesday/master/data/2019/2019-08-13/emperors.csv")
emperors <- readr::read_csv("https://raw.githubusercontent.com/rfordatascience/tidytuesday/master/data/2019/2019-08-13/emperors.csv")
readr::write_csv(emperors, 'emperors.csv')
emperors = readr::read_csv('emperors.csv')
View(emperors)
class(emperors$birth)
library(lubridate)
emperors$life_span = as.period(
difftime(
emperors$birth - emperors$death,
units = 'days'
),
unit = 'year'
)
class(emperors$birth)
class(emperors$death)
emperors$life_span = as.period(
difftime(
emperors$birth,
emperors$death,
units = 'days'
),
unit = 'year'
)
View(emperors)
emperors$life_span = as.period(
difftime(
emperors$birth,
emperors$death,
units = 'days'
),
unit = 'years'
)
View(emperors)
View(emperors)
emperors$life_span = difftime(
emperors$birth,
emperors$death,
units = 'days'
)
View(emperors)
emperors$life_span = difftime(
emperors$death,
emperors$birth,
units = 'days'
)
emperors$life_span = as.period(emperors$life_span, unit = 'years')
View(emperors)
emperors$life_span = as.interval(emperors$life_span, unit = 'years')
emperors$life_span = difftime(
emperors$death,
emperors$birth,
units = 'secs'
)/dyears(1)
View(emperors)
library(ggplot)
library(ggplot2)
ggplot(emperors)+
geom_point(
aes(
size = life_span,
x = dynasty
)
)
ggplot(emperors)+
geom_point(
aes(
size = life_span,
x = dynasty,
y = life_span
)
)
ggplot(emperors)+
geom_point(
aes(
size = life_span,
x = name,
y = life_span,
fill = dynasty
)
)
ggplot(emperors)+
geom_point(
aes(
size = life_span,
x = name,
y = life_span,
color = dynasty
)
)
ggplot(emperors)+
geom_point(
aes(
size = life_span,
x = dynasty,
y = life_span,
color = dynasty
)
)
